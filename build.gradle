group 'com.webank.fisco.autotest'
version '1.0'

def gradleVer = "4"

def weidSDKVersion = "com.webank:weid-java-sdk:1.6.3"
def weeventSDKVersion = "com.webank.weevent:weevent-client:1.3.0"

if (gradle.gradleVersion.startsWith("6")
        || gradle.gradleVersion.startsWith("5")
        || gradle.gradleVersion.startsWith("4.10")
        || gradle.gradleVersion.startsWith("4.9")
        || gradle.gradleVersion.startsWith("4.8")
        || gradle.gradleVersion.startsWith("4.7")) {
    println "Gradle with version >= 4.7 detected"
    gradleVer = "5"
} else {
    println "Gradle with version < 4.7 detected"
}

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

sourceCompatibility = 1.8

repositories {
    maven {
        url "http://maven.aliyun.com/nexus/content/groups/public/"
    }
    maven { url "https://dl.bintray.com/ethereum/maven/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    mavenCentral()
}

List lombok = [
        "org.projectlombok:lombok:1.16.14"
]

List jcommander = [
        "com.beust:jcommander:1.72"
]

List apache_commons = [
        "org.apache.commons:commons-collections4:4.1",
        "org.apache.commons:commons-lang3:3.5",
        "commons-cli:commons-cli:1.3.1",
        "org.apache.logging.log4j:log4j-jcl:2.3"
]

// In this section you declare the dependencies for your production and test code
List jackson = [
        "com.fasterxml.jackson.core:jackson-databind:2.8.8.1",
        "com.github.fge:json-schema-validator:2.2.6",
        "com.github.reinert:jjschema:1.16",
        "com.google.zxing:core:3.3.0"
]

configurations {
    localDeps
}

dependencies {
    //testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.fisco-bcos', name: 'web3sdk', version: '2.4.1'
    compile weeventSDKVersion
    //compile files("libs/carbon-account-sdk-1.0.0.jar")

    localDeps 'org.projectlombok:lombok:1.16.14'
    if (gradleVer.startsWith("4")) {
        if (gradle.startParameter.isOffline()) {
            compile fileTree(dir: 'dist/lib', include: '*.jar')
        } else {
            compile lombok, apache_commons, jackson, jcommander
            compile(weidSDKVersion) {
                exclude group:"org.slf4j", module: "slf4j-log4j12"
            }
        }
    }
    if (gradleVer.startsWith("5")) {
        if (!gradle.startParameter.isOffline()) {
            compileOnly 'org.projectlombok:lombok:1.16.14'
            annotationProcessor 'org.projectlombok:lombok:1.16.14'
            compile apache_commons, jackson, jcommander
            compile(weidSDKVersion) {
                exclude group:"org.slf4j", module: "slf4j-log4j12"
            }
        } else {
            compileOnly files('dist/lib/lombok-1.16.14.jar')
            annotationProcessor files('dist/lib/lombok-1.16.14.jar')
            compile fileTree(dir: 'dist/lib', include: '*.jar')
        }
    }
}


sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

jar {
    destinationDir file('dist/app')
    archiveName project.name + '-' + version + '.jar'

    //doFirst {
    //    exclude '/*.*'
    //}
    exclude '**/*.xml'
    exclude '**/*.properties'

    doLast {
        copy {
            from file('src/main/resources/')
            into 'dist/conf'
        }
        copy {
            from configurations.compile
            into 'dist/lib'
        }
        mkdir 'dist/logs'
    }
}